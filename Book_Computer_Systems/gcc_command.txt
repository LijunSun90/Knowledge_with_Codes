
# gcc is a C compiler.
# Related command: objdump for disassembler.

################################################################################
# Basic
################################################################################
# Translate source file "foo.c" to object file "foo".
gcc -o foo foo.c

# I prefer to write in this way for the convenience of using other options.
gcc foo.c -o foo

# Translate source file "foo.c" to relocatable object program "a.out".
gcc foo.c


################################################################################
# C version
################################################################################
# C version: GNU 89
gcc -std=gnu89 foo.c

# C version: ANSI, ISO C90
gcc -ansi, -std=c89 foo.c

# C version: ISO C99
gcc -std=c99 foo.c

# C version: ISO C11
gcc -std=c11 foo.c


################################################################################
# Word size of a machine
################################################################################
# 32-bit program, runnable on 32-bit or 64-bit machine
gcc -m32 foo.c

# 64-bit program, runnable on 64-bit machine
gcc -m64 foo.c


################################################################################
# Compiler System
# -E, Only run the preprocessor
# -S, Only run preprocess and compilation steps
# -c, Only run preprocess, compile, and assemble steps

Example outputs:
hello.c: 78B
hello.i: 24K
hello.s: 944B
hello.o: 744B
hello  : 33K
################################################################################

########## 1. Preprocessor: Output "*.i", modified source file.

gcc -E foo.c -o foo.i

# It is OK if using a different suffix apart from ".i" for the output,
# e.g., ".i2"
# gcc -E foo.c -o foo.i2

# If you can check the difference between the file "foo.i" and "foo.i2",
# you will find they are the same without any output for the following command.
cmp foo.i foo.i2

########## 2. Compiler: Output "*.s", assembly program".

gcc -S foo.c -o foo.s

# It is OK if using a different suffix apart from ".s" for the output,
# e.g., ".s2"
# gcc -S foo.c -o foo.s2

# Output "*.s" file directly from "*.i"
gcc -S foo.i -o foo_from_i.s

########## 3. Assembler: Output "*.o", relocatable object program.

gcc -c foo.c -o foo.o

# It is OK if using a different suffix apart from ".o" for the output,
# e.g., ".o2"
# gcc -c foo.c -o foo.o2

# Output "*.o" directly from relocatable objective file "*.o".
gcc -c foo.s -o foo_from_s.o

########## 4. Linker: Output executable object program (binary).

# Output "*.o" directly from "*.o".
gcc foo.o -o foo_from_o


################################################################################
# Debug
# -g    Generate source-level debug information
################################################################################
gcc -g foo.c -o foo


################################################################################
# Redirect the standard error to a file.
################################################################################
gcc foo.c 2> errors &


################################################################################
# Optimization option:
# -Og
# -O1
# -O2
################################################################################


################################################################################
# Useful option.
# man gcc
# gcc --help
# -W<warning>             Enable the specified warning
# -w                      Suppress all warnings
# -Wall	                  Enables some warnings.
################################################################################
